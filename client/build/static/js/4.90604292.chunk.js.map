{"version":3,"sources":["DemoPages/Dashboards/Basic/index.js"],"names":["jsonata","require","statsData","graphData","AnalyticsDashboard1","_this","Object","_home_cjv_Documenti_varritech_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_cjv_Documenti_varritech_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_cjv_Documenti_varritech_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","embed_google","that","_home_cjv_Documenti_varritech_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","script","document","createElement","src","async","setTimeout","google_trends1","appendChild","google_trends2","onload","window","trends","embed","renderWidgetTo","guestPath","state","dropdownOpen","activeTab1","toggle","bind","toggle1","_this2","axios","get","then","res","JSON","parse","data","world_stats","ca_stats","forceUpdate","catch","console","error","setState","prevState","tab","_this3","statsWidgetCols","map","stat","_statistics","country","statistic","statsMap","cases","deaths","tests","casesPer1M","deathsPer1M","testsPer1M","statsVal","concat","evaluate","statsArr","statsRank","rank","statsProgress","length","toFixed","statistics","react__WEBPACK_IMPORTED_MODULE_6___default","a","reactstrap__WEBPACK_IMPORTED_MODULE_9__","md","className","style","position","right","includes","toString","value","statsWidgetRows","push","react__WEBPACK_IMPORTED_MODULE_6__","shift","_percentageIncrease","oldVal","newVal","percent","Math","round","sign","positive","percentageIncrease","parseInt","slice","data-wow-duration","data-wow-delay","react_addons_css_transition_group__WEBPACK_IMPORTED_MODULE_7___default","component","padding","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","display","justifyContent","width","maxWidth","_material_ui_icons_BarChart__WEBPACK_IMPORTED_MODULE_8___default","fontSize","fill","marginRight","margin","activeTab","tabId","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_12__","icon","faArrowUp","faArrowDown","recharts__WEBPACK_IMPORTED_MODULE_10__","height","top","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","type","stroke","strokeWidth","fillOpacity","marginTop","marginBottom","ref","el","Component"],"mappings":"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","file":"static/js/4.90604292.chunk.js","sourcesContent":["import React, {Component, Fragment, ReactDOM} from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n\nimport {\n    Row, Col,\n    CardHeader,\n    Card,\n    CardBody,\n    Progress,\n    TabContent,\n    TabPane,\n} from 'reactstrap';\n\n\nimport {\n    AreaChart, Area, Line,\n    ResponsiveContainer,\n    YAxis,\n    Bar,\n    XAxis,\n    BarChart,\n    ComposedChart,\n    CartesianGrid,\n    Tooltip,\n    LineChart\n} from 'recharts';\n\nimport {\n    faAngleUp,\n    faArrowRight,\n    faArrowUp,\n    faArrowLeft,\n    faArrowDown,\n    faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport axios from 'axios'\n\nconst jsonata = require(\"jsonata\");\nlet statsData = ''\nlet graphData = ''\n\n/**\n * Des: determines the position of a country in statistic using jsonata\n * @param country the country to determine the statistics for\n * @param statistic the statistic to determine from a list of well defined values\n * [ 'cases', 'deaths' , 'tests', 'casesPer1M', 'deathsPer1M', 'testsPer1M' ]\n * \n */\nconst statistics = (country, statistic) => {\n\n    const statsMap = {\n        cases: 0,\n        deaths: 2,\n        tests: 9,\n        casesPer1M: 7, \n        deathsPer1M: 8,\n        testsPer1M: 10,\n    }\n\n    const statsVal = jsonata(`$replace($$.${country}[${statsMap[statistic]}],\",\",\"\").$trim()`).evaluate(statsData)\n    const statsArr = jsonata(`$distinct($reverse($sort($$.*#$i[$i%11=${statsMap[statistic]}].$trim().$@$v[$v!=\"\"].$replace($v,\",\",\"\").$number())).$string())`).evaluate(statsData);\n\n\n    const statsRank = jsonata(`$@$v#$j[$v=\"${statsVal}\"]{\"rank\":$j+1}`).evaluate(statsArr).rank\n    const statsProgress = (((statsArr.length - ( statsRank - 1 )) / statsArr.length).toFixed(2) * 100)\n    \n    return { statsVal, statsRank, statsProgress };\n}\n/**\n * Des: Determines the percentage increase from oldVal to newVal\n */\nconst percentageIncrease = (oldVal, newVal) => {\n\n    const percent = `${Math.round( ((newVal - oldVal) / oldVal) * 100 )}`\n    const sign = Math.sign(percent) == 1 ? '+%' : Math.sign(percent) == -1 ? '-%' : '' \n    const positive = ( sign == '+%' ? true : false ) \n    \n    return { percent, positive, sign }\n}\n\nexport default class AnalyticsDashboard1 extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            dropdownOpen: false,\n            activeTab1: '11',\n\n        };\n        this.toggle = this.toggle.bind(this);\n        this.toggle1 = this.toggle1.bind(this);\n\n    }\n\n    componentDidMount() {\n        axios.get(`/meta`)\n        .then((res) => {\n            statsData = JSON.parse(res.data.world_stats)\n            graphData = JSON.parse(res.data.ca_stats)\n            this.forceUpdate()\n        })\n        .catch(console.error)\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            dropdownOpen: !prevState.dropdownOpen\n        }));\n    }\n\n    toggle1(tab) {\n        if (this.state.activeTab1 !== tab) {\n            this.setState({\n                activeTab1: tab\n            });\n        }\n    }\n\n    embed_google = () => {\n    \n        const that = this;\n        const script = document.createElement(\"script\")\n        script.src = \"https://ssl.gstatic.com/trends_nrtr/2152_RC04/embed_loader.js\"\n        script.async = true\n\n        setTimeout(() => {\n            this.google_trends1.appendChild(script)\n            this.google_trends2.appendChild(script)\n        }, 0)\n        \n        script.onload = function () {\n          window.trends.embed.renderWidgetTo(that.google_trends1, \"US_cu_4Rjdh3ABAABMHM_en\", \"fe_line_chart_e9d325a0-e899-4215-a8bf-e1857ef601d8\", {\"guestPath\":\"https://trends.google.com:443/trends/embed/\"})\n          window.trends.embed.renderWidgetTo(that.google_trends2, \"US_cu_E-aoCHEBAADKbM_en\", \"fe_list_7e016d51-03c6-4ca7-a148-f720abb8b4bd\", {\"guestPath\":\"https://trends.google.com:443/trends/embed/\"}) \n        }\n    }\n\n    render() {\n\n        const statsArr = [ 'cases', 'deaths' , 'tests', 'casesPer1M','testsPer1M', 'deathsPer1M' ]\n        \n        console.log(this.state.meta)\n\n        if ( statsData && graphData ) {\n\n        this.embed_google()\n\n        let statsWidgetCols = statsArr.map((stat) => { \n\n            const { statsVal, statsRank, statsProgress } = statistics('Canada', stat)\n\n            const statsMap = {\n                cases: 'Cases',\n                deaths: 'Deaths',\n                tests: 'Tests',\n                casesPer1M: 'Cases / 1M',\n                testsPer1M: 'Tests / 1M',\n                deathsPer1M: 'Deaths / 1M'\n            }\n\n            return ( <Col md=\"6\">\n            <div className=\"widget-content\">\n                <div className=\"widget-content-outer\">\n                    <div className=\"widget-content-wrapper\">\n                        <div className=\"widget-content-left mr-3\">\n                            <div className=\"widget-numbers fsize-3 text-muted\">\n                              {statsVal}\n                            </div>\n                        </div>\n                        <div className=\"widget-content-right\">\n                            <div className=\"text-muted opacity-6\">\n                                {statsMap[stat]}\n                            </div>\n                        </div>\n                        <div style={{position:'absolute', right:0}}>\n                            {statsRank}{[11,12,13].includes(statsRank.toString()) ? 'th' : statsRank.toString()[-1] == 1 ? 'st' : statsRank.toString()[-1] == 2 ? 'nd' : statsRank.toString()[-1] == 3 ? 'rd' : 'th'}\n                        </div>\n                    </div>\n                    <div className=\"widget-progress-wrapper mt-1\">\n                        <Progress\n                            className=\"progress-bar-sm progress-bar-animated-alt\"\n                            value={statsProgress}/>\n                    </div>\n                </div>\n            </div>\n        </Col> )\n        });\n\n        let statsWidgetRows = [];  \n        while ( statsWidgetCols.length > 0 ) { /* group by 2's */\n            statsWidgetRows.push ( <Fragment>\n                <Row className=\"mt-3\">\n                    {statsWidgetCols.shift()}\n                    {statsWidgetCols.shift()}\n                </Row>\n                <div className=\"divider mt-4\"/>\n            </Fragment>\n            )\n        }\n\n        const oldVal = parseInt(graphData.slice(-2)[0].cases)\n        const newVal = parseInt(graphData.slice(-1)[0].cases)\n        const { percent, positive, sign } = percentageIncrease(oldVal,newVal);\n\n        return (\n            <Fragment>\n                <Row className=\"mt-3\">\n                    <Col md=\"6\" className={`fadeInLeft wow`} data-wow-duration=\"1s\" data-wow-delay=\"1s\"> \n                <ReactCSSTransitionGroup\n                    component=\"div\"\n                    style={{padding:20}}\n                    transitionName=\"TabsAnimation\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={0}\n                    transitionEnter={false}\n                    transitionLeave={false}>\n                    <div style={{display: 'flex', padding: '40px 0 0', justifyContent: 'center'}}>\n                        <Card style={{width: '100%', maxWidth: 800}} className=\"mb-3\">\n                            <CardHeader style={{padding: '40px 0px'}} className=\"card-header-tab\">\n                                <div className=\"card-header-title\">\n                                    <BarChartIcon style={{ fontSize: 60, fill: '#871f78', marginRight: 10 }} />\n                                    <p style={{margin:0}}>Corona Virus Statistics Canada</p>\n                                </div>\n                                {/* <div style={{display: 'flex', justifyContent:'center' }} className=\"btn-actions-pane-right\">\n\n                                    <Button handleClick={() => {this.toggle1('11')}} label={'Cases'}/>\n                                    <Button handleClick={() => {this.toggle1('22')}} label={'Deaths'}/>\n\n                                </div> */}\n                            </CardHeader>\n                            <TabContent activeTab={this.state.activeTab1}>\n                                <TabPane tabId=\"11\">\n                                    <CardBody className=\"pt-2\">\n                                        {statsWidgetRows}\n                                    </CardBody>\n                                    <div className=\"widget-chart p-0\">\n                                        <div className=\"widget-chart-content\">\n                                            <div className={`widget-description mt-0 ${positive ? 'text-danger' : 'text-success'}`}>\n                                                <FontAwesomeIcon icon={positive ? faArrowUp : faArrowDown}/>\n                                                <span className=\"pl-1\"> {sign}{percent}</span>\n                                                <span className=\"text-muted opacity-8 pl-1\"> Cases Trend</span>\n                                            </div>\n                                        </div>\n                                        <div style={{padding: 20}}>\n                                        <ResponsiveContainer height={400}>\n                                            <AreaChart data={graphData}  margin={{top: 200, right: 10, left: 0, bottom: 0}}>\n                                                <defs>\n                                                    <linearGradient id=\"colorPv1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                                        <stop offset=\"10%\" stopColor=\"#871f78\" stopOpacity={0.7}/>\n                                                        <stop offset=\"90%\" stopColor=\"#871f78\" stopOpacity={0}/>\n                                                    </linearGradient>\n                                                </defs>\n                                                <Tooltip/>\n\n                                                <XAxis dataKey=\"date\" />\n                                                <Area type='monotoneX' dataKey='cases' stroke='#871f78' strokeWidth={2} fillOpacity={1}\n                                                        fill=\"url(#colorPv1)\"/>\n                                            </AreaChart>\n                                        </ResponsiveContainer>\n                                        </div>\n                                    </div>\n                                </TabPane>\n                            </TabContent>\n                        </Card>\n                    </div>\n                </ReactCSSTransitionGroup>\n                </Col>\n                <Col className={`fadeInRight wow`} data-wow-duration=\"1s\" data-wow-delay=\"1s\" md=\"6\">\n                    <div style={{padding: 20, marginTop: 40, marginBottom: 30}}>\n                    <div style={{maxWidth:800, margin: 'auto'}}ref={el => (this.google_trends1 = el)} />\n                    </div>\n\n                    <div style={{padding: 20, marginBottom: 30}}>\n                    <div style={{maxWidth:800, margin: 'auto'}}ref={el => (this.google_trends2 = el)} />\n                    </div>\n                </Col>\n                </Row>\n            </Fragment>\n            )\n        } else {\n            return (\n                null\n            )\n        }\n    }\n}\n"],"sourceRoot":""}